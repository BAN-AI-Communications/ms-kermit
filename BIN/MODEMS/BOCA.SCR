; FILE BOCA.SCR
;
; An MS-DOS Kermit script program for dialing the BOCA 14.4 (V.32bis)
; Faxmodem, to be used with MS-DOS Kermit 3.13 or later.  The modem is set
; up for compression, error correction, all types of fallback,
; RTS/CTS flow control, fixed interface speed of 57600.
;
; Authors: Christine M. Gianone, Frank da Cruz; Columbia U, March 1994.
;
def errfail echo \%1, hangup, goto fail ; Macro to handle failures.
if < VERSION 312 errfail {MS-DOS Kermit 3.12 or later required.}
if eq "\v(system)" "UNIX" if = \v(local) 0 stop 1 You must SET LINE first

define chkerr if fail stop 1 \%1
define chkok input 3 OK, if fail stop 1 \%1

set input echo on               ; So we can watch what happens.
set input timeout proceed       ; Allow IF SUCCESS, IF FAILURE.
set input case ignore           ; Use caseless string comparisons

set parity none                 ; Avoid parity foulups
set flow none                   ; Avoid flow control deadlocks
hangup                          ; Begin by dropping DTR
pause 1                         ; for one second

; Speed.  Modem autobauds up to 57600.

set speed 57600                 ; Use high interface speed.

echo Configuring BOCA 14.4 Faxmodem on \v(line) at \v(speed) bps...

:INIT
output ATQ0V1\13                ; Enable word result codes
chkok {Can't get modem's attention}

output AT E1 W1 &D2 S95=47 X4\13 ; Echoing, result codes, etc.
chkok {Can't initialize modem}

echo Enabling modulation negotiation...
output AT F1 S37=11 N1\13       ; Start modulation speed negotiation at V32bis
chkok {Can't enable modulation speed negotiation}
echo Enabling hardware flow control...
output AT &K3\13                ; RTS/CTS hardware flow control
chkok {Can't enable RTS/CTS}    ; On modem
wait 5 cts
if fail errfail {Modem is not asserting CTS!}
set flow rts/cts                ; And in Kermit too, but only now
echo Configuring modem to ignore BREAK...
output AT S82=128\13            ; Make modem ignore BREAK
chkok {Can't become transparent to BREAK}
echo Enabling error correction and data compression...
output AT &Q5 S36=7 S46=138\13  ; Enable error correction & compression
                                ; with automatic speed buffering
chkok {Can't enable compression EC and fallback}
echo Fixing interface speed...
output AT \{92}N3 S48=7\13      ; Fix speed, start EC negotiation with LAPM
chkok {Can't fix interface speed}
echo Reduce forced hangup delay to 1 second...
output AT S38=1\13
chkok {Can't set forced hangup delay}

if def \%1 if not equal "\%1" "=" goto BEGIN
echo Modem initialization complete, no number to dial
end 0

:BEGIN                          ; Now DIAL.
clear                           ; Clear INPUT buffer.
set count 5                     ; Dialing retry counter, 5 tries allowed.
echo Dialing \%1 on \v(line) at \v(speed) bps, wait...
echo
pause 1
goto dial                       ; 1st time, skip pause and Redialing message

:REDIAL
set alarm 30
pause 30                        ; Wait 30 seconds before redialing.
if not alarm errfail {Dialing canceled.}
echo Redialing...               ; Message for redialing.
pause 1

:DIAL
output ATD\%1\13                ; Dial the number.
set alarm 90                    ; (For detecting keyboard interruptions.)
if > VERSION 312 clear input    ; Clear echo from INPUT buffer.
if < VERSION 313 clear
input 30 \10                    ; Wait for the linefeeds...

:GETMSG
input 60 \10                    ; ...that surround the response message.
if success goto gotmsg          ; Got a message.
if alarm errfail {No response from modem.} ; No response in 90 seconds.
hangup                          ; User interrupted from keyboard,
output \13                      ; cancel dialing by sending carriage return,
goto again                      ; and go try again right away.

:GOTMSG
reinput 1 CONNECT               ; Got a message, was it CONNECT?
if success goto done            ; If so, we're done.
reinput 1 BUSY                  ; Line is busy.
if success goto busy            ; Go wait a while and then dial again.
reinput 1 ERROR                 ; Command syntax error.
if success errfail {Dialing command error}
reinput 1 NO CARRIER            ; Phone didn't answer or no carrier.
if success errfail {No answer or no carrier}
reinput 1 NO DIALTONE           ; No dialtone when phone taken off hook.
if success errfail {No dialtone - Is your modem connected to the phone line\63}
goto getmsg                     ; None of the above, get another message.

:BUSY
if < \v(count) 2 goto quit      ; Don't wait 30 seconds if tries are used up.
Echo Line is busy, will dial again in 30 seconds
echo Press any key to cancel...
output \13                      ; CR cancels dialing
hangup                          ; Hang up.
:AGAIN
if count goto redial            ; Then go redial.
:QUIT
errfail {It never answers!  I give up.} ; Too many tries.

:DONE                           ; Connected.
echo \7                         ; Celebrate with a beep.
define errfail                  ; Erase local macro definitions...
end 0                           ; Finished, return success code.

:FAIL                           ; Dialing failed, no beep.
define errfail                  ; Erase local macro definitions...
end 1                           ; Return failure code.

; End of BOCA.SCR
